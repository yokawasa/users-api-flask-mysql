apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: mysql
        image: ghcr.io/yokawasa/users-api-flask-mysql/mysql:5.7
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: usersapi-secrets
              key: db_root_password
        ports:
        - containerPort: 3306
          name: db-container
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: db
spec:
  ports:
  - port: 3306
    protocol: TCP
    name: mysql
  selector:
    app: db
  type: NodePort
---
apiVersion: v1
kind: Secret
metadata:
  name: usersapi-secrets
type: Opaque
data:
  db_root_password: YWRtaW4=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usersapi-deployment
  labels:
    app: usersapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usersapi
  template:
    metadata:
      labels:
        app: usersapi
    spec:
      containers:
        - name: usersapi
          image: ghcr.io/yokawasa/users-api-flask-mysql/users-api:0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: db_root_password
              valueFrom:
                secretKeyRef:
                  name: usersapi-secrets
                  key: db_root_password
            - name: db_name
              value: usersapi
---
apiVersion: v1
kind: Service
metadata:
  name: usersapi-service
spec:
  ports:
  - port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: usersapi
  type: LoadBalancer
